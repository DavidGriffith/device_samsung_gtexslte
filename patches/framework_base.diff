diff --git a/services/core/java/com/android/server/display/ColorFade.java b/services/core/java/com/android/server/display/ColorFade.java
index 7a5f523..eae6a0e 100644
--- a/services/core/java/com/android/server/display/ColorFade.java
+++ b/services/core/java/com/android/server/display/ColorFade.java
@@ -43,6 +43,7 @@ import android.view.Surface.OutOfResourcesException;
 import android.view.Surface;
 import android.view.SurfaceControl;
 import android.view.SurfaceSession;
+import android.os.SystemProperties;
 
 import libcore.io.Streams;
 
@@ -95,6 +96,7 @@ final class ColorFade {
     private EGLSurface mEglSurface;
     private boolean mSurfaceVisible;
     private float mSurfaceAlpha;
+    private final int mHWRotation;
 
     // Texture names.  We only use one texture, which contains the screenshot.
     private final int[] mTexNames = new int[1];
@@ -128,6 +130,7 @@ final class ColorFade {
 
     public ColorFade(int displayId) {
         mDisplayId = displayId;
+        mHWRotation = Integer.parseInt(SystemProperties.get("ro.sf.hwrotation", "0")) / 90;
         mDisplayManagerInternal = LocalServices.getService(DisplayManagerInternal.class);
     }
 
@@ -603,7 +606,7 @@ final class ColorFade {
                 mSurface.copyFrom(mSurfaceControl);
 
                 mSurfaceLayout = new NaturalSurfaceLayout(mDisplayManagerInternal,
-                        mDisplayId, mSurfaceControl);
+                  mDisplayId, mSurfaceControl, mHWRotation);
                 mSurfaceLayout.onDisplayTransaction();
             }
         } finally {
@@ -737,13 +740,16 @@ final class ColorFade {
         private final DisplayManagerInternal mDisplayManagerInternal;
         private final int mDisplayId;
         private SurfaceControl mSurfaceControl;
+        private final int mHWRotation;
 
         public NaturalSurfaceLayout(DisplayManagerInternal displayManagerInternal,
-                int displayId, SurfaceControl surfaceControl) {
+                int displayId, SurfaceControl surfaceControl,
+                int hwRotation) {
             mDisplayManagerInternal = displayManagerInternal;
             mDisplayId = displayId;
             mSurfaceControl = surfaceControl;
             mDisplayManagerInternal.registerDisplayTransactionListener(this);
+            mHWRotation = hwRotation;
         }
 
         public void dispose() {
@@ -761,7 +767,7 @@ final class ColorFade {
                 }
 
                 DisplayInfo displayInfo = mDisplayManagerInternal.getDisplayInfo(mDisplayId);
-                switch (displayInfo.rotation) {
+                switch ((displayInfo.rotation + mHWRotation) % 4) {
                     case Surface.ROTATION_0:
                         mSurfaceControl.setPosition(0, 0);
                         mSurfaceControl.setMatrix(1, 0, 0, 1);
